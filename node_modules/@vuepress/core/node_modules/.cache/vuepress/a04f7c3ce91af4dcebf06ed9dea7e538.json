{"remainingRequest":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vp2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vp2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vp2\\pages\\.vuepress\\theme\\components\\SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vp2\\pages\\.vuepress\\theme\\components\\SearchBox.vue","mtime":1550324087157},{"path":"D:\\vp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547842182214},{"path":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js","mtime":1547849720006},{"path":"D:\\vp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547842182214},{"path":"D:\\vp2\\node_modules\\vue-loader\\lib\\index.js","mtime":1547842183433}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport queryIndex from '@dynamic/es';\nexport default {\n  data: function data() {\n    return {\n      query: '',\n      focusIndex: null,\n      isFocus: false,\n      isOpen: false,\n      suggestionsOpen: false,\n      isMobile: false\n    };\n  },\n  methods: {\n    search: function search() {\n      if (this.showSuggestions && this.suggestions.length) {\n        this.$set(this.$data, 'suggestionsOpen', true);\n      }\n    },\n    hoverTo: function hoverTo(idx) {\n      this.focusIndex = idx;\n    },\n    onUp: function onUp() {\n      if (this.showSuggestions) {\n        if (this.focusIndex > 0) {\n          this.focusIndex--;\n        } else {\n          this.focusIndex = this.suggestions.length - 1;\n        }\n      }\n    },\n    onDown: function onDown() {\n      if (this.showSuggestions) {\n        if (this.focusIndex < this.suggestions.length - 1) {\n          this.focusIndex++;\n        } else {\n          this.focusIndex = 0;\n        }\n      }\n    },\n    toggleBlur: function toggleBlur(e) {\n      if (this.$data.isMobile) {\n        this.$set(this.$data, 'isOpen', false);\n      }\n\n      this.$set(this.$data, 'isFocus', false);\n      this.$set(this.$data, 'suggestionsOpen', false);\n    },\n    toggleFocus: function toggleFocus(e) {\n      this.$set(this.$data, 'isFocus', true);\n    },\n    go: function go(idx) {\n      this.$router.push(this.suggestions[idx].url);\n    },\n    performSearchButtonAction: function performSearchButtonAction(e) {\n      e.preventDefault();\n\n      if (!this.$data.isOpen && this.$data.isMobile) {\n        this.$set(this.$data, 'isOpen', true);\n        this.$set(this.$data, 'isFocus', true);\n        this.$refs['searchbox'].focus();\n        return;\n      }\n\n      if (this.$refs['searchbox'].value.length < 1) return; // Actual search\n\n      this.$router.push('/search?q=' + encodeURIComponent(this.$refs['searchbox'].value));\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.evt_resize);\n  },\n  computed: {\n    showSuggestions: function showSuggestions() {\n      return this.isFocus && this.suggestions && this.suggestions.length;\n    },\n    suggestions: function suggestions() {\n      var query = this.query;\n\n      if (!query) {\n        return;\n      }\n\n      return [];\n      return queryIndex(query);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var handleWidth = function handleWidth() {\n      if (document.documentElement.clientWidth < 576 && _this.$data.isMobile == false) {\n        _this.$set(_this.$data, 'isMobile', true);\n      }\n\n      if (document.documentElement.clientWidth > 576 && _this.$data.isMobile == true) {\n        _this.$set(_this.$data, 'isMobile', false);\n      }\n    };\n\n    handleWidth();\n    window.addEventListener('resize', handleWidth, false);\n  }\n};",null]}