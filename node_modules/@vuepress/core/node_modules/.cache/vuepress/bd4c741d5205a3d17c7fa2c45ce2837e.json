{"remainingRequest":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vp2\\node_modules\\@vuepress\\core\\lib\\app\\app.js","dependencies":[{"path":"D:\\vp2\\node_modules\\@vuepress\\core\\lib\\app\\app.js","mtime":1549712920177},{"path":"D:\\vp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547842182214},{"path":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js","mtime":1547849720006}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport _Object$assign from \"D:\\\\vp2\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n\n/* global VUEPRESS_TEMP_PATH */\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport dataMixin from './dataMixin';\nimport { routes } from '@internal/routes';\nimport { siteData } from '@internal/siteData';\nimport appEnhancers from '@internal/app-enhancers';\nimport globalUIComponents from '@internal/global-ui';\nimport ClientComputedMixin from '@transform/ClientComputedMixin';\nimport VuePress from './plugins/VuePress';\nimport { handleRedirectForCleanUrls } from './redirect.js'; // built-in components\n\nimport Content from './components/Content.js';\nimport ContentSlotsDistributor from './components/ContentSlotsDistributor';\nimport OutboundLink from './components/OutboundLink.vue';\nimport ClientOnly from './components/ClientOnly'; // suggest dev server restart on base change\n\nif (module.hot) {\n  var prevBase = siteData.base;\n  module.hot.accept(VUEPRESS_TEMP_PATH + '/internal/siteData.js', function () {\n    if (siteData.base !== prevBase) {\n      window.alert(\"[vuepress] Site base has changed. \" + \"Please restart dev server to ensure correct asset paths.\");\n    }\n  });\n}\n\nVue.config.productionTip = false;\nVue.use(Router);\nVue.use(VuePress); // mixin for exposing $site and $page\n\nVue.mixin(dataMixin(ClientComputedMixin, siteData)); // component for rendering markdown content and setting title etc.\n\nVue.component('Content', Content);\nVue.component('ContentSlotsDistributor', ContentSlotsDistributor);\nVue.component('OutboundLink', OutboundLink); // component for client-only content\n\nVue.component('ClientOnly', ClientOnly); // global helper for adding base path to absolute urls\n\nVue.prototype.$withBase = function (path) {\n  var base = this.$site.base;\n\n  if (path.charAt(0) === '/') {\n    return base + path.slice(1);\n  } else {\n    return path;\n  }\n};\n\nexport function createApp(isServer) {\n  var router = new Router({\n    base: siteData.base,\n    mode: 'history',\n    fallback: false,\n    routes: routes,\n    scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n      if (savedPosition) {\n        return savedPosition;\n      } else if (to.hash) {\n        if (Vue.$vuepress.$get('disableScrollBehavior')) {\n          return false;\n        }\n\n        return {\n          selector: to.hash\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0\n        };\n      }\n    }\n  });\n  handleRedirectForCleanUrls(router);\n  var options = {};\n\n  try {\n    appEnhancers.forEach(function (enhancer) {\n      if (typeof enhancer === 'function') {\n        enhancer({\n          Vue: Vue,\n          options: options,\n          router: router,\n          siteData: siteData,\n          isServer: isServer\n        });\n      }\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  var app = new Vue(_Object$assign(options, {\n    router: router,\n    render: function render(h) {\n      return h('div', {\n        attrs: {\n          id: 'app'\n        }\n      }, [h('router-view', {\n        ref: 'layout'\n      }), h('div', {\n        class: 'global-ui'\n      }, globalUIComponents.map(function (component) {\n        return h(component);\n      }))]);\n    }\n  }));\n  return {\n    app: app,\n    router: router\n  };\n}",null]}