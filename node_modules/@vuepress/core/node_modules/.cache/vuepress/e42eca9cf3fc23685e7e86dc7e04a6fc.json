{"remainingRequest":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vp2\\node_modules\\@vuepress\\core\\lib\\app\\root-mixins\\updateMeta.js","dependencies":[{"path":"D:\\vp2\\node_modules\\@vuepress\\core\\lib\\app\\root-mixins\\updateMeta.js","mtime":1549712920177},{"path":"D:\\vp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547842182214},{"path":"D:\\vp2\\node_modules\\babel-loader\\lib\\index.js","mtime":1547849720006}],"contextDependencies":[],"result":["import _Object$keys from \"D:\\\\vp2\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.array.map\";\nimport _toConsumableArray from \"D:\\\\vp2\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport _Set from \"D:\\\\vp2\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/set\";\nexport default {\n  created: function created() {\n    if (this.$ssrContext) {\n      this.$ssrContext.title = this.$title;\n      this.$ssrContext.lang = this.$lang;\n      this.$ssrContext.description = this.$page.description || this.$description;\n    }\n  },\n  mounted: function mounted() {\n    // update title / meta tags\n    this.currentMetaTags = new _Set();\n    this.updateMeta();\n  },\n  methods: {\n    updateMeta: function updateMeta() {\n      var _this = this;\n\n      document.title = this.$title;\n      document.documentElement.lang = this.$lang;\n      var userMeta = this.$page.frontmatter.meta || [];\n      var meta = userMeta.slice(0);\n      var useGlobalDescription = userMeta.filter(function (m) {\n        return m.name === 'description';\n      }).length === 0; // #665 Avoid duplicate description meta at runtime.\n\n      if (useGlobalDescription) {\n        meta.push({\n          name: 'description',\n          content: this.$description\n        });\n      } // Including description meta coming from SSR.\n\n\n      var descriptionMetas = document.querySelectorAll('meta[name=\"description\"]');\n\n      if (descriptionMetas.length) {\n        descriptionMetas.forEach(function (m) {\n          return _this.currentMetaTags.add(m);\n        });\n      }\n\n      this.currentMetaTags = new _Set(updateMetaTags(meta, this.currentMetaTags));\n    }\n  },\n  watch: {\n    $page: function $page() {\n      this.updateMeta();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    updateMetaTags(null, this.currentMetaTags);\n  }\n};\n\nfunction updateMetaTags(meta, current) {\n  if (current) {\n    _toConsumableArray(current).forEach(function (c) {\n      document.head.removeChild(c);\n    });\n  }\n\n  if (meta) {\n    return meta.map(function (m) {\n      var tag = document.createElement('meta');\n\n      _Object$keys(m).forEach(function (key) {\n        tag.setAttribute(key, m[key]);\n      });\n\n      document.head.appendChild(tag);\n      return tag;\n    });\n  }\n}",null]}